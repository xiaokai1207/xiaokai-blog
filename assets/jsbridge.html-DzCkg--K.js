import{_ as s,c as a,b as p,o as t}from"./app-dm7EWZd7.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="jsbridge-通信原理" tabindex="-1"><a class="header-anchor" href="#jsbridge-通信原理"><span>JSBridge 通信原理</span></a></h1><h2 id="一、url-scheme-拦截方案" tabindex="-1"><a class="header-anchor" href="#一、url-scheme-拦截方案"><span>一、URL Scheme 拦截方案</span></a></h2><ol><li><strong>核心原理</strong></li></ol><ul><li>H5 触发请求：H5 通过修改 location.href 或创建 iframe 发送一个特定格式的 URL（如 jsbridge://methodName?params=xxx）。</li><li>原生拦截 URL：原生 WebView 监听 URL 请求，拦截符合约定规则的 Scheme（如 jsbridge://）。</li><li>解析并执行：原生解析 URL 中的方法名和参数，执行对应的原生功能。</li><li>回调 H5：原生通过 WebView 的 evaluateJavascript 方法将结果返回给 H5。</li></ul><ol start="2"><li><strong>代码示例</strong></li></ol><p>H5 端（JavaScript）</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 发送请求给原生</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">callNative</span><span class="token punctuation">(</span><span class="token parameter">method<span class="token punctuation">,</span> params<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> callbackId <span class="token operator">=</span> <span class="token function">generateUniqueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成唯一回调 ID</span></span>
<span class="line">  window<span class="token punctuation">[</span>callbackId<span class="token punctuation">]</span> <span class="token operator">=</span> callback<span class="token punctuation">;</span> <span class="token comment">// 存储回调函数</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 通过 iframe 发送 URL Scheme 请求</span></span>
<span class="line">  <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">jsbridge://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>method<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?params=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;callbackId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>callbackId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> iframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;iframe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  iframe<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span></span>
<span class="line">  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iframe<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> iframe<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 短暂延迟后移除 iframe</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 示例：调用原生的 Toast 功能</span></span>
<span class="line"><span class="token function">callNative</span><span class="token punctuation">(</span><span class="token string">&#39;showToast&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Toast shown:&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原生端（Android 示例）</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">webView<span class="token punctuation">.</span><span class="token function">setWebViewClient</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebViewClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">shouldOverrideUrlLoading</span><span class="token punctuation">(</span><span class="token class-name">WebView</span> view<span class="token punctuation">,</span> <span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;jsbridge://&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 解析 URL</span></span>
<span class="line">      <span class="token class-name">Uri</span> uri <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">String</span> method <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 如 &quot;showToast&quot;</span></span>
<span class="line">      <span class="token class-name">String</span> params <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getQueryParameter</span><span class="token punctuation">(</span><span class="token string">&quot;params&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">String</span> callbackId <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getQueryParameter</span><span class="token punctuation">(</span><span class="token string">&quot;callbackId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// 执行原生方法</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;showToast&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> text<span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 回调 H5</span></span>
<span class="line">        <span class="token class-name">String</span> js <span class="token operator">=</span> <span class="token string">&quot;window[&#39;&quot;</span> <span class="token operator">+</span> callbackId <span class="token operator">+</span> <span class="token string">&quot;&#39;](&#39;success&#39;);&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        webView<span class="token punctuation">.</span><span class="token function">evaluateJavascript</span><span class="token punctuation">(</span>js<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 拦截此请求</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">shouldOverrideUrlLoading</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>流程图</li></ol><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/f00cb7d6391a45dbb5dc1209e2794464~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5YmN56uv6Zi_5p6X:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMjgyMzIwMTU5MjE4Mjc4MiJ9&amp;rk3s=e9ecf3d6&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1740132355&amp;x-orig-sign=Wk6rUi2YbIlwfOlfxGtEIrmAjfk%3D" alt="流程图"></p><ol start="4"><li><strong>优缺点</strong></li></ol><p>优点：</p><ul><li>兼容性好（支持所有 WebView 版本）。</li><li>实现简单，无需依赖复杂注入机制。 缺点：</li><li>性能较低（频繁创建/移除 iframe 或修改 location.href）。</li><li>URL 长度限制（不适合传输大数据）。</li></ul><hr><h2 id="二、注入-api-方案" tabindex="-1"><a class="header-anchor" href="#二、注入-api-方案"><span>二、注入 API 方案</span></a></h2><ol><li><strong>核心原理</strong></li></ol><ul><li>原生注入对象：原生代码向 WebView 的全局作用域（window）注入一个 JavaScript 对象（如 window.NativeBridge）。</li><li>H5 直接调用：H5 通过 window.NativeBridge.methodName() 直接调用原生方法。</li><li>异步回调：通过 Promise 或回调函数处理原生返回的结果。</li></ul><ol start="2"><li><strong>代码示例</strong> H5 端（JavaScript）</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 调用原生方法（假设已注入 window.NativeBridge）</span></span>
<span class="line">window<span class="token punctuation">.</span>NativeBridge<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Toast shown:&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 更通用的封装</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">callNative</span><span class="token punctuation">(</span><span class="token parameter">method<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>NativeBridge <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>NativeBridge<span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      window<span class="token punctuation">.</span>NativeBridge<span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>reject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;NativeBridge not injected!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原生端（Android 示例）</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 定义供 H5 调用的类</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NativeBridge</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token annotation punctuation">@JavascriptInterface</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showToast</span><span class="token punctuation">(</span><span class="token class-name">String</span> params<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> callbackId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">JSONObject</span> json <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> text <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> text<span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_SHORT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 回调 H5</span></span>
<span class="line">    <span class="token class-name">String</span> js <span class="token operator">=</span> <span class="token string">&quot;window.NativeBridge.invokeCallback(&#39;&quot;</span> <span class="token operator">+</span> callbackId <span class="token operator">+</span> <span class="token string">&quot;&#39;, &#39;success&#39;);&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    webView<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> webView<span class="token punctuation">.</span><span class="token function">evaluateJavascript</span><span class="token punctuation">(</span>js<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 将对象注入 WebView</span></span>
<span class="line">webView<span class="token punctuation">.</span><span class="token function">addJavascriptInterface</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">NativeBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;NativeBridge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原生端（iOS 示例，使用 WKWebView）</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">NativeBridge</span><span class="token punctuation">:</span> <span class="token class-name">NSObject</span><span class="token punctuation">,</span> <span class="token class-name">WKScriptMessageHandler</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">func</span> <span class="token function-definition function">userContentController</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> controller<span class="token punctuation">:</span> <span class="token class-name">WKUserContentController</span><span class="token punctuation">,</span> didReceive message<span class="token punctuation">:</span> <span class="token class-name">WKScriptMessage</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> message<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;NativeBridge&quot;</span></span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">let</span> body <span class="token operator">=</span> message<span class="token punctuation">.</span>body <span class="token keyword">as</span><span class="token operator">!</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span></span>
<span class="line">      <span class="token keyword">let</span> method <span class="token operator">=</span> body<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;method&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span><span class="token operator">!</span> <span class="token class-name">String</span></span>
<span class="line">      <span class="token keyword">let</span> params <span class="token operator">=</span> body<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;params&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span><span class="token operator">!</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span></span>
<span class="line">      <span class="token keyword">let</span> callbackId <span class="token operator">=</span> body<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;callbackId&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span><span class="token operator">!</span> <span class="token class-name">String</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">if</span> method <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;showToast&quot;</span></span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> text <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;text&quot;</span></span><span class="token punctuation">]</span> <span class="token keyword">as</span><span class="token operator">!</span> <span class="token class-name">String</span></span>
<span class="line">        <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 显示 Toast</span></span>
<span class="line">          <span class="token comment">// 回调 H5</span></span>
<span class="line">          <span class="token keyword">let</span> js <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;window.NativeBridge.invokeCallback(&#39;</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">callbackId</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&#39;, &#39;success&#39;);&quot;</span></span></span>
<span class="line">          webView<span class="token punctuation">.</span><span class="token function">evaluateJavaScript</span><span class="token punctuation">(</span>js<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 注入 NativeBridge</span></span>
<span class="line"><span class="token keyword">let</span> userContentController <span class="token operator">=</span> <span class="token class-name">WKUserContentController</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">userContentController<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">NativeBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;NativeBridge&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token class-name">WKWebViewConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">config<span class="token punctuation">.</span>userContentController <span class="token operator">=</span> userContentController</span>
<span class="line"><span class="token keyword">let</span> webView <span class="token operator">=</span> <span class="token class-name">WKWebView</span><span class="token punctuation">(</span>frame<span class="token punctuation">:</span> <span class="token punctuation">.</span>zero<span class="token punctuation">,</span> configuration<span class="token punctuation">:</span> config<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>流程图</li></ol><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/c944ce6af4fe44b7a84e871ef2540495~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5YmN56uv6Zi_5p6X:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMjgyMzIwMTU5MjE4Mjc4MiJ9&amp;rk3s=e9ecf3d6&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1740132528&amp;x-orig-sign=lHnWNChimXE6gvTtyYfJI7SRLuQ%3D" alt="流程图"></p><ol start="4"><li><strong>优缺点</strong></li></ol><p>优点：</p><ul><li>性能高（直接调用，无需 URL 解析）。</li><li>支持大数据传输（无 URL 长度限制）。</li></ul><p>缺点：</p><ul><li>兼容性问题</li><li>安全性风险</li></ul>`,31)]))}const i=s(e,[["render",o],["__file","jsbridge.html.vue"]]),u=JSON.parse('{"path":"/crossEnd/jsbridge.html","title":"JSBridge 通信原理","lang":"ch-CN","frontmatter":{},"headers":[{"level":2,"title":"一、URL Scheme 拦截方案","slug":"一、url-scheme-拦截方案","link":"#一、url-scheme-拦截方案","children":[]},{"level":2,"title":"二、注入 API 方案","slug":"二、注入-api-方案","link":"#二、注入-api-方案","children":[]}],"git":{"updatedTime":1740046388000,"contributors":[{"name":"chriswlwang","username":"chriswlwang","email":"chriswlwang@tencent.com","commits":1,"url":"https://github.com/chriswlwang"}]},"filePathRelative":"crossEnd/jsbridge.md","excerpt":"\\n<h2>一、URL Scheme 拦截方案</h2>\\n<ol>\\n<li><strong>核心原理</strong></li>\\n</ol>\\n<ul>\\n<li>H5 触发请求：H5 通过修改 location.href 或创建 iframe 发送一个特定格式的 URL（如 jsbridge://methodName?params=xxx）。</li>\\n<li>原生拦截 URL：原生 WebView 监听 URL 请求，拦截符合约定规则的 Scheme（如 jsbridge://）。</li>\\n<li>解析并执行：原生解析 URL 中的方法名和参数，执行对应的原生功能。</li>\\n<li>回调 H5：原生通过 WebView 的 evaluateJavascript 方法将结果返回给 H5。</li>\\n</ul>"}');export{i as comp,u as data};
